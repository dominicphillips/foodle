// Generated by CoffeeScript 1.6.3
App.MapsView = App.BaseView.extend({
  template: App.templates['dishes/maps'],
  onAfterRender: function() {
    var calcRoute, directionsDisplay, initialize, lat, long, map;
    long = this.model.get('restaurant').location.coordinates[0];
    lat = this.model.get('restaurant').location.coordinates[1];
    directionsDisplay = new google.maps.DirectionsRenderer();
    console.log(directionsDisplay);
    map = 0;
    initialize = function() {
      var end, mapOptions, start;
      start = new google.maps.LatLng(App.position.coords.latitude, App.position.coords.longitude);
      end = new google.maps.LatLng(lat, long);
      mapOptions = {
        zoom: 16,
        disableDefaultUI: true,
        draggable: true,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        center: start
      };
      map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
      directionsDisplay.setMap(map);
      return calcRoute(start, end);
    };
    calcRoute = function(start, end) {
      var directionsService, request;
      request = {
        origin: start,
        destination: end,
        travelMode: google.maps.DirectionsTravelMode.WALKING
      };
      directionsService = new google.maps.DirectionsService();
      return directionsService.route(request, function(response, status) {
        if (status === google.maps.DirectionsStatus.OK) {
          directionsDisplay.setDirections(response);
          return setTimeout(function() {
            var bounds, myLatLng;
            bounds = new google.maps.LatLngBounds();
            myLatLng = new google.maps.LatLng(lat, long);
            start = new google.maps.LatLng(App.position.coords.latitude, App.position.coords.longitude);
            bounds.extend(myLatLng);
            bounds.extend(start);
            map.fitBounds(bounds);
            return google.maps.event.trigger(map, "resize");
          }, 500);
        }
      });
    };
    return initialize();
  }
});
